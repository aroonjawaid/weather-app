{"ast":null,"code":"var _jsxFileName = \"/Users/aroon/Downloads/Week-10-Weather-APP-Example-master/src/App.js\";\nimport React from 'react';\nimport Scard from './components/scard';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport { ApiClient } from './ApiClient';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: \"\",\n      weather: []\n    };\n    this.apiClient = new ApiClient();\n  }\n\n  fetchWeatherData() {\n    this.setState({\n      loading: \"....loading\",\n      fetching: true\n    });\n    this.apiClient.getWeather().then(response => {\n      this.updateWeather(response.data.daily);\n    }).finally(() => {\n      this.setState({\n        loading: \"\"\n      }, console.log(this.state.weather));\n    });\n  }\n\n  updateWeather(response) {\n    this.setState({\n      weather: response\n    });\n  }\n\n  buildCards() {\n    return this.state.weather.slice(1, 6).map((current, i) => /*#__PURE__*/React.createElement(Col, {\n      key: i,\n      lg: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Scard, {\n      dateString: current.dt,\n      img: current.weather[0].icon,\n      alt: current.weather[0].description,\n      text: current.weather[0].description,\n      max: current.temp.max,\n      min: current.temp.min,\n      wind: current.wind_speed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n  componentDidMount() {\n    this.fetchWeatherData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      bg: \"primary\",\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n      href: \"#home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Weather \", this.state.loading)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, this.buildCards())));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aroon/Downloads/Week-10-Weather-APP-Example-master/src/App.js"],"names":["React","Scard","Container","Row","Col","Navbar","CardGroup","ApiClient","App","Component","constructor","props","state","loading","weather","apiClient","fetchWeatherData","setState","fetching","getWeather","then","response","updateWeather","data","daily","finally","console","log","buildCards","slice","map","current","i","dt","icon","description","temp","max","min","wind_speed","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Scard from './components/scard';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar'\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport { ApiClient } from './ApiClient'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: \"\",\n      weather: []\n    }\n    this.apiClient = new ApiClient()\n  }\n\n\n  fetchWeatherData() {\n    this.setState({\n      loading: \"....loading\",\n      fetching: true\n    })\n\n    this.apiClient.getWeather()\n      .then((response) => { this.updateWeather(response.data.daily) })\n      .finally(() => {\n        this.setState({\n          loading: \"\"\n        }, console.log(this.state.weather))\n      })\n  }\n\n  updateWeather(response) {\n    this.setState({\n      weather: response\n    })\n  }\n\n  buildCards() {\n    return this.state.weather.slice(1, 6).map((current, i) => (\n      <Col key={i} lg>\n        <CardGroup>\n          <Scard dateString={current.dt} img={current.weather[0].icon} alt={current.weather[0].description} text={current.weather[0].description} max={current.temp.max} min={current.temp.min} wind={current.wind_speed} />\n        </CardGroup>\n      </Col>\n\n    )\n    )\n  }\n\n  componentDidMount() {\n    this.fetchWeatherData()\n\n  }\n\n  render() {\n    return (\n      <>\n\n        <Container>\n          <Navbar bg=\"primary\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">Weather {this.state.loading}</Navbar.Brand>\n          </Navbar>\n          <Row>\n            {this.buildCards()}\n          </Row>\n        </Container>\n      </>\n    );\n  }\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}